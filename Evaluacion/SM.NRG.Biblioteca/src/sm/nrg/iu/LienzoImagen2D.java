/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sm.nrg.iu;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

/**
 * Crea un lienzo con una imagen de fondo sobre la que pintar.
 * @author nazaret
 */
public class LienzoImagen2D extends Lienzo2D {

    /**
     * Constructor por defecto.
     */
    public LienzoImagen2D() {
        initComponents();
    }
    
    /**
     * Pinta la imagen y las figuras que se añadan.
     * @param g Objeto graphics para pintar
     */
    @Override
    public void paintComponent(Graphics g){
        super.paintComponent(g);
        
        if(img != null)
            g.drawImage(img, 0, 0, this);
        
    }
    
    /**
     * Establece una imagen en el lienzo.
     * @param img Nueva imagen para el lienzo
     */
    public void setImagen(BufferedImage img){
        this.img = img;
        
        if(img != null)
            setPreferredSize(new Dimension(img.getWidth(), img.getHeight()));
    }
    
    /**
     * Devuelve la imagen del lienzo junto con las figuras añadidas.
     * @param draw_vector Controla si se devuelve la imagen con las figuras o sin ellas
     * @return La imagen
     */
    public BufferedImage getImagen(boolean draw_vector){
        if(draw_vector){
            BufferedImage aux = new BufferedImage(img.getWidth(), img.getHeight(), img.getType());
            
            Graphics2D g2d = aux.createGraphics();
            g2d.drawImage(img, img.getWidth(), img.getHeight(), this);
            
            super.paint(g2d);
            
            return aux;
        }
        
        return img;
    }
    
    /**
     * Devuelve la imagen tal y como está, sin figuras.
     * @return La imagen
     */
    public BufferedImage getImagen(){
        return img;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * Imagen del lienzo.
     */
    private BufferedImage img;
}
